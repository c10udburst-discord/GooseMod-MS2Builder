parcelRequire=function(e,r,t,n){var i,o="function"==typeof parcelRequire&&parcelRequire,u="function"==typeof require&&require;function f(t,n){if(!r[t]){if(!e[t]){var i="function"==typeof parcelRequire&&parcelRequire;if(!n&&i)return i(t,!0);if(o)return o(t,!0);if(u&&"string"==typeof t)return u(t);var c=new Error("Cannot find module '"+t+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[t][1][r]||r},p.cache={};var l=r[t]=new f.Module(t);e[t][0].call(l.exports,p,l,l.exports,this)}return r[t].exports;function p(e){return f(p.resolve(e))}}f.isParcelRequire=!0,f.Module=function(e){this.id=e,this.bundle=f,this.exports={}},f.modules=e,f.cache=r,f.parent=o,f.register=function(r,t){e[r]=[function(e,r){r.exports=t},{}]};for(var c=0;c<t.length;c++)try{f(t[c])}catch(e){i||(i=e)}if(t.length){var l=f(t[t.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=l:"function"==n&&(this[n]=l)}if(parcelRequire=f,i)throw i;return f}({"index.js":[function(require,module,exports) {
"use strict";function e(e,t,n,o,r,i,s){try{var u=e[i](s),a=u.value}catch(d){return void n(d)}u.done?t(a):Promise.resolve(a).then(o,r)}function t(t){return function(){var n=this,o=arguments;return new Promise(function(r,i){var s=t.apply(n,o);function u(t){e(s,r,i,u,a,"next",t)}function a(t){e(s,r,i,u,a,"throw",t)}u(void 0)})}}var n;Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var o={goosemodHandlers:{onImport:function(){var e=t(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:n=document.createElement("style"),document.head.appendChild(n),n.appendChild(document.createTextNode('/**\n * @name ClassicSending\n * @author Discord Addons\n * @version 1.0.1\n * @description Simple minitheme to show a small text next to the message instead of graying when it\'s sending, just like classic messaging. Text is customizable in the theme file.\n * @website https://discord-addons.github.io/main\n * @source https://github.com/discord-addons/discord-addons/blob/master/download-themes-here/ClassicSending\n * @invite W7BVNGSkM7\n*/\n\n@import url(https://discord-addons.github.io/discord-addons/xcores/themes/CS_Core.css);\n\n:root {\n    /* Custom Additional Text */\n    --sending-text: "(sending...)";\n    --failed-text: "(failed)";\n\n    /* Update */\n    --version101_cs: none; /* Never edit this, doing that will break the update notice behavior! */\n}\n')),goosemodScope.settings.gmSettings.get().allThemeSettings&&goosemodScope.settings.createItem("ClassicSending",["",{type:"text-input",text:"Sending Text",oninput:function(e){document.body.style.setProperty("--sending-text",e)},initialValue:function(){var e=document.body.style.getPropertyValue("--sending-text")||'"(sending...)"';return console.log(e),e}},{type:"text-input",text:"Failed Text",oninput:function(e){document.body.style.setProperty("--failed-text",e)},initialValue:function(){var e=document.body.style.getPropertyValue("--failed-text")||'"(failed)"';return console.log(e),e}},{type:"text-input",text:"Version101_cs",oninput:function(e){document.body.style.setProperty("--version101_cs",e)},initialValue:function(){var e=document.body.style.getPropertyValue("--version101_cs")||"none";return console.log(e),e}},{type:"text-input",text:"Theme Name",oninput:function(e){document.body.style.setProperty("--theme-name",e)},initialValue:function(){var e=document.body.style.getPropertyValue("--theme-name")||'"Classic Sending"';return console.log(e),e}},{type:"text-input",text:"Cs Build",oninput:function(e){document.body.style.setProperty("--cs-build",e)},initialValue:function(){var e=document.body.style.getPropertyValue("--cs-build")||'"2"';return console.log(e),e}}]);case 4:case"end":return e.stop()}},e)}));return function(){return e.apply(this,arguments)}}(),onRemove:function(){var e=t(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:n.remove();try{goosemodScope.settings.removeItem("ClassicSending")}catch(t){}case 2:case"end":return e.stop()}},e)}));return function(){return e.apply(this,arguments)}}(),getSettings:function(){var e=t(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",[["--sending-text",document.body.style.getPropertyValue("--sending-text")],["--failed-text",document.body.style.getPropertyValue("--failed-text")],["--version101_cs",document.body.style.getPropertyValue("--version101_cs")],["--theme-name",document.body.style.getPropertyValue("--theme-name")],["--cs-build",document.body.style.getPropertyValue("--cs-build")]]);case 1:case"end":return e.stop()}},e)}));return function(){return e.apply(this,arguments)}}(),loadSettings:function(){var e=t(regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:t.forEach(function(e){document.body.style.setProperty(e[0],e[1])});case 1:case"end":return e.stop()}},e)}));return function(t){return e.apply(this,arguments)}}()}};exports.default=o;
},{}]},{},["index.js"], null);parcelRequire('index.js').default